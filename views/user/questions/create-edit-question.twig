{% extends "layouts/main.twig" %}

{% block headers %}

{{ include('includes/scripts/select2.twig') }}

{% endblock %}

{% block content %}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="{{ app.yurl('/') }}">Home</a></li>
        <li class="breadcrumb-item"><a href="{{ app.yurl('/questions') }}">Questions</a></li>
        <li class="breadcrumb-item active" aria-current="page">{{ isCreating ? 'Add Question' : 'Edit Question' }}</li>
    </ol>
</nav>

<h4>{{ isCreating ? 'Add Question' : 'Edit Question' }}</h4>

{% include 'includes/error-message.twig' %}

<div id="edit-question">
    <form method="post">
        <p class="m-0">Question Type</p>
        <div class="row">
            <div class="form-group col-auto">
                {% set checked = question.isBibleQnA() or question is not defined or question is null ? 'checked' : '' %}
                <input type="radio" name="question-type" id="bible-qna" value="bible-qna" {{ checked }}/>
                <label for="bible-qna">Bible</label>
            </div>
            <div class="form-group col-auto">
                {% set checked = question.isCommentaryQnA() ? 'checked' : '' %}
                <input type="radio" name="question-type" id="commentary-qna" value="commentary-qna" {{ checked }}/>
                <label for="commentary-qna">SDA Bible Commentary</label>
            </div>
        </div>
        <div class="row mt-2">
            <div class="form-group col-sm-12 col-md-4">
                {% set checked = question.isFillIn() ? 'checked' : '' %}
                <input type="checkbox" id="question-is-fill-in-blank" name="question-is-fill-in-blank" {{ checked }} />
                <label for="question-is-fill-in-blank">Question is a Fill in the Blank question</label>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12 col-md-10">
                <p id="fill-in-info" class="mb-1 mt-1"><em>For fill in the blank questions, type the text into the question field as you would read it in the Bible/SDA Bible Commentary. Blanks will be added for you when taking a quiz. The answer field is not needed for fill in the blank questions.</em></p>
            </div>
        </div>
        <hr/>
        <div class="row">
            <div class="form-group col-sm-12 col-md-6">
                <label for="question-text">Question</label>
                <textarea id="question-text" name="question-text" class="form-control" 
                        required placeholder="What was the name of Esther's uncle?" 
                        maxlength="10000" rows="4">{{ question.question }}</textarea>
                <small>When adding a question, you don't need to add the "According to Daniel 3:4" portion at the beginning of the question. This will be added for you when taking a quiz based upon the start/end verses that you choose below.</small>
            </div>
            <div id="question-answer-div" class="form-group col-sm-12 col-md-6">
                <label for="question-answer">Answer</label>
                <textarea id="question-answer" name="question-answer" class="form-control" required placeholder="Mordecai" maxlength="3000" rows="4">{{ question.answer }}</textarea>
            </div>
        </div>
        <div class="row mt-2">
            <div class="form-group col-sm-6 col-md-3 col-lg-2">
                <label for="number-of-points">Number of Points</label>
                <input type="number" class="form-control" min="0" max="100" id="number-of-points" name="number-of-points" value="{{ question.numberPoints != 0 ? question.numberOfPoints : 1 }}" required placeholder="1"/>
            </div>
            <div class="form-group col-sm-12 col-md-4 col-lg-2">
                <label for="language-select">Language</label>
                <select class="form-control" id="language-select" name="language-select" required>
                    {% for language in languages %}
                        {% set selected = question.languageID is defined and question.languageID > 0 
                            ? (language.languageID == question.languageID ? 'selected' : '')
                            : (language.languageID == userLanguage.languageID ? 'selected' : '') %}
                        <option value="{{ language.languageID }}" {{ selected }}>{{ language.getDisplayName() }}</option>
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="row mt-2" id="start-verse-div">
            <p class="mb-0">Start Reference</p>
            <input type="hidden" id="start-verse-id" name="start-verse-id" value="-1"/>
            <div class="col-sm-6 col-md-3 col-lg-2">
                <select class="form-control" id="start-book-select" name="start-book" required>
                    <option id="book-no-selection-option" value="">Select a book...</option>
                </select>
                <small>Book</small>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-2">
                <select class="form-control" id="start-chapter-select" name="start-chapter" required>
                    <option id="chapter-no-selection-option" value="">Select a chapter...</option>
                </select>
                <small>Chapter</small>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-2">
                <select class="form-control" id="start-verse-select" name="start-verse" required>
                    <option id="verse-no-selection-option" value="">Select a verse...</option>
                </select>
                <small>Verse</small>
            </div>
        </div>
        <div class="row mt-2" id="end-verse-div">
            <p class="m-0">End Reference (if question covers more than 1 verse)</p>
            <input type="hidden" id="end-verse-id" name="end-verse-id" value="-1"/>
            <div class="col-sm-6 col-md-3 col-lg-2">
                <select class="form-control" id="end-book-select" name="end-book">
                    <option id="book-no-selection-option" value="-1">Select a book...</option>
                </select>
                <small>Book</small>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-2">
                <select class="form-control" id="end-chapter-select" name="chapter">
                    <option id="chapter-no-selection-option" value="-1">Select a chapter...</option>
                </select>
                <small>Chapter</small>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-2">
                <select class="form-control" id="end-verse-select" name="verse">
                    <option id="verse-no-selection-option" value="-1">Select a verse...</option>
                </select>
                <small>Verse</small>
            </div>
        </div>
        <div class="row commentary-inputs mt-2">
            <p class="mb-0">Commentary Info</p>
            <select class="col-sm-12 col-md-4" id="commentary-volume" name="commentary-volume" required>
                <option id="commentary-no-selection-option" value="">Select commentary...</option>
                {% for commentary in commentaries %}
                    <option value="{{ commentary.commentaryID }}">{{ commentary.getDisplayValue() }}</option>
                {% endfor %}
            </select>
        </div>
        <div class="row commentary-inputs mt-2">
            <div class="form-group col-sm-6 col-md-2">
                <label for="commentary-start">Start Page</label>
                <input type="number" class="form-control" min="0" id="commentary-start" name="commentary-start" value="{{ question.commentaryStartPage != 0 ? question.commentaryStartPage : '' }}" placeholder="12"/>
            </div>
            <div class="form-group col-sm-6 col-md-3 col-lg-2">
                <label for="commentary-end">End Page</label>
                <input type="number" class="form-control" min="0" id="commentary-end" name="commentary-end" value="{{ question.commentaryEndPage != 0 ? question.commentaryEndPage : '' }}" placeholder="15"/>
            </div>
        </div>
        {% if isFlagged %}
            <div class="row" id="unflag-question">
                <div class="form-group col-sm-12">
                    <input type="checkbox" id="remove-question-flag" name="remove-question-flag"/>
                    <label class="black-text" for="remove-question-flag">Delete flag for this question</label>
                </div>
            </div>
        {% endif %}
        <button class="btn btn-sm btn-primary mt-2" type="submit" name="action"><i class="fas fa-save"></i> {{ isCreating ? 'Add Question' : 'Save Changes' }}</button>
    </form>
</div>

{% endblock %}

{% block scripts %}

<script type="text/javascript">
    // http://stackoverflow.com/a/15965470/3938401
    var selectedVerse = null;
    var books = {{ json_encode(bookData) | raw }};
    var commentaries = {{ json_encode(commentaries) | raw }};
    var questionType = "{{ question.type | default('bible-qna') }}";
    var isFillInInitially = {{ question.isFillIn() ? 'true' : 'false' }};
    var startVerseID = {{ question.startVerseID | default(-1) }};
    var endVerseID = {{ question.endVerseID | default(-1) }};
    var commentaryID = {{ question.commentaryID | default(-1) }};

    $(document).ready(function() {
        $('#language-select').select2({
            theme: 'bootstrap-5',
            placeholder: 'Select a language...',
            searchInputPlaceholder: 'Search languages...',
            allowClear: false
        });
        $('#start-book-select').select2({
            theme: 'bootstrap-5',
            placeholder: 'Select a book...',
            searchInputPlaceholder: 'Search books...',
            allowClear: false
        });
        $('#end-book-select').select2({
            theme: 'bootstrap-5',
            placeholder: 'Select a book...',
            searchInputPlaceholder: 'Search books...',
            allowClear: true
        }).on('select2:unselecting', function() {
            // prevent opening when clearing:
            // https://github.com/select2/select2/issues/3320#issuecomment-780660819
            $(this).data('unselecting', true);
        }).on('select2:opening', function(e) {
            if ($(this).data('unselecting')) {
                $(this).removeData('unselecting');
                e.preventDefault();
            }
        });
        $('#start-chapter-select').select2({
            theme: 'bootstrap-5',
            placeholder: 'Select a chapter...',
            searchInputPlaceholder: 'Search chapters...',
            allowClear: false
        });
        $('#end-chapter-select').select2({
            theme: 'bootstrap-5',
            placeholder: 'Select a chapter...',
            searchInputPlaceholder: 'Search chapters...',
            allowClear: true
        }).on('select2:unselecting', function() {
            // prevent opening when clearing:
            // https://github.com/select2/select2/issues/3320#issuecomment-780660819
            $(this).data('unselecting', true);
        }).on('select2:opening', function(e) {
            if ($(this).data('unselecting')) {
                $(this).removeData('unselecting');
                e.preventDefault();
            }
        });
        $('#start-verse-select').select2({
            theme: 'bootstrap-5',
            placeholder: 'Select a verse...',
            searchInputPlaceholder: 'Search verses...',
            allowClear: false
        });
        $('#end-verse-select').select2({
            theme: 'bootstrap-5',
            placeholder: 'Select a verse...',
            searchInputPlaceholder: 'Search verses...',
            allowClear: true
        }).on('select2:unselecting', function() {
            // prevent opening when clearing:
            // https://github.com/select2/select2/issues/3320#issuecomment-780660819
            $(this).data('unselecting', true);
        }).on('select2:opening', function(e) {
            if ($(this).data('unselecting')) {
                $(this).removeData('unselecting');
                e.preventDefault();
            }
        });
        $('#commentary-volume').select2({
            theme: 'bootstrap-5',
            placeholder: 'Select a commentary...',
            searchInputPlaceholder: 'Search commentaries...',
            allowClear: false
        });

        var bibleQuestionType = document.getElementById('bible-qna');
        var commentaryType = document.getElementById('commentary-qna');
        var startVerseDiv = document.getElementById('start-verse-div');
        var endVerseDiv = document.getElementById('end-verse-div');
        var startBook = document.getElementById('start-book-select');
        var startChapter = document.getElementById('start-chapter-select');
        var startVerse = document.getElementById('start-verse-select');
        var endBook = document.getElementById('end-book-select');
        var endChapter = document.getElementById('end-chapter-select');
        var endVerse = document.getElementById('end-verse-select');

        var commentaryVolume = document.getElementById('commentary-volume');
        var commentaryStartPage = document.getElementById('commentary-start');
        var commentaryEndPage = document.getElementById('commentary-end');

        var fillInBlankCheckbox = document.getElementById('question-is-fill-in-blank');
        var answerField = document.getElementById('question-answer');

        function hideCommentaryDiv() {
            $('.commentary-inputs').hide();
            commentaryVolume.required = false;
        }

        function hideBibleDiv() {
            $(startVerseDiv).hide();
            $(endVerseDiv).hide();
            startBook.required = false;
            startChapter.required = false;
            startVerse.required = false;
        }

        if (questionType == 'bible-qna' || questionType == 'bible-qna-fill') {
            hideCommentaryDiv(); // on page load, default is Bible question [bible-qna]
        } else {
            hideBibleDiv();
        }

        bibleQuestionType.addEventListener('click', function() {
            // hide commentary data and set fields as not required
            hideCommentaryDiv();
            // show Bible question data and set fields as required
            $(startVerseDiv).show();
            $(endVerseDiv).show();
            startBook.required = true;
            startChapter.required = true;
            startVerse.required = true;
            hideShowBibleVerseSelectorsAsNeeded();
        }, false);
        commentaryType.addEventListener('click', function() {
            // hide Bible question data and set fields as not required
            hideBibleDiv();
            // show commentary data and set fields as required
            $('.commentary-inputs').show();
            commentaryVolume.required = true;
            hideShowBibleVerseSelectorsAsNeeded();
        }, false);


        function setupChapterSelectForBook(book, prefix) {
            $('#' + prefix + 'chapter-select option').not(':first').remove();
            $('#' + prefix + 'verse-select option').not(':first').remove();
            if (typeof book !== 'undefined') {
                var chapters = book.chapters;
                for (var i = 0; i < chapters.length; i++) {
                    $('#' + prefix + 'chapter-select').append("<option value='" + i + "'>" + chapters[i].number + "</option>");
                }
            }
            updateSelect2('#' + prefix + 'chapter-select');
            if ($('#' + prefix + 'verse-id').val() != -1) {
                updateSelect2('#' + prefix + 'verse-select');
            }
            $('#' + prefix + 'verse-id').val(-1);
        }

        function setupVerseSelectForChapter(chapter, prefix) {
            $('#' + prefix + 'verse-select option').not(':first').remove();
            if (typeof chapter !== 'undefined') {
                var verses = chapter.verses;
                for (var i = 0; i < verses.length; i++) {
                    $('#' + prefix + 'verse-select').append("<option value='" + i + "'>" + verses[i].number + "</option>");
                }
            }
            updateSelect2('#' + prefix + 'verse-select');
            $('#' + prefix + 'verse-id').val(-1);
        }

        function setupBookSelector(prefix) {
            $('#' + prefix + 'book-select').change(function() { 
                var bookArrayIndex = $(this).val();
                if (bookArrayIndex != -1 && bookArrayIndex !== "") {
                    var book = books[bookArrayIndex];
                    setupChapterSelectForBook(book, prefix);
                    $('#' + prefix + 'verse-id').val(-1);
                }
                hideShowBibleVerseSelectorsAsNeeded();
            }); 
        }

        function setupChapterSelector(prefix) {
            $('#' + prefix + 'chapter-select').change(function() { 
                var bookArrayIndex = $('#' + prefix + 'book-select').val();
                var chapterArrayIndex = $(this).val();
                if (chapterArrayIndex != -1 && chapterArrayIndex !== "") {
                    var chapter = books[bookArrayIndex].chapters[chapterArrayIndex];
                    setupVerseSelectForChapter(chapter, prefix);
                    $('#' + prefix + 'verse-id').val(-1);
                }
                hideShowBibleVerseSelectorsAsNeeded();
            });
        }

        function setupVerseSelector(prefix) {
            $('#' + prefix + 'verse-select').change(function() { 
                var bookArrayIndex = $('#' + prefix + 'book-select').val();
                var chapterArrayIndex = $('#' + prefix + 'chapter-select').val();
                var verseArrayIndex = $(this).val();
                if (verseArrayIndex != -1 && verseArrayIndex !== "") {
                    selectedVerse = books[bookArrayIndex].chapters[chapterArrayIndex].verses[verseArrayIndex];
                    $('#' + prefix + 'verse-id').val(selectedVerse.verseID);
                }
                hideShowBibleVerseSelectorsAsNeeded();
            });
        }

        function setupInitialValue(prefix, i, j, k, book, chapter, verseID) {
            // :eq looks by index, so +1 since index 0 is the 'Select a book...' etc.
            $('#' + prefix + 'book-select option:eq(' + (i+1) + ')').prop('selected', true);
            updateSelect2('#' + prefix + 'book-select');
            setupChapterSelectForBook(book, prefix);
            $('#' + prefix + 'chapter-select option:eq(' + (j+1) + ')').prop('selected', true);
            updateSelect2('#' + prefix + 'chapter-select');
            setupVerseSelectForChapter(chapter, prefix);
            $('#' + prefix + 'verse-select option:eq(' + (k+1) + ')').prop('selected', true);
            updateSelect2('#' + prefix + 'verse-select');
            $('#' + prefix + 'verse-id').val(verseID);
        }

        setupBookSelector('start-');
        setupBookSelector('end-');

        setupChapterSelector('start-');
        setupChapterSelector('end-');

        setupVerseSelector('start-');
        setupVerseSelector('end-');

        // setup the book selector
        for (var i = 0; i < books.length; i++) {
            $('#start-book-select').append("<option value='" + i + "'>" + books[i].name + "</option>");
            $('#end-book-select').append("<option value='" + i + "'>" + books[i].name + "</option>");
        }
        updateSelect2('#start-book-select');
        updateSelect2('#end-book-select');
        updateSelect2('#language-select');

        if (startVerseID != -1 || endVerseID != -1) {
            var didFindStart = false;
            var didFindEnd = false;
            for (var i = 0; i < books.length; i++) {
                var book = books[i];
                for (var j = 0; j < book.chapters.length; j++) {
                    var chapter = book.chapters[j];
                    for (var k = 0; k < chapter.verses.length; k++) {
                        var verse = chapter.verses[k];
                        if (startVerseID != -1 && verse.verseID == startVerseID) {
                            didFindStart = true;
                            setupInitialValue('start-', i, j, k, book, chapter, startVerseID);
                        }
                        if (endVerseID != -1 && verse.verseID == endVerseID) {
                            didFindEnd = true;
                            setupInitialValue('end-', i, j, k, book, chapter, endVerseID);
                        }
                        if (didFindStart && didFindEnd) {
                            break;
                        }
                    }
                    if (didFindStart && didFindEnd) {
                        break;
                    }
                }
                if (didFindStart && didFindEnd) {
                    break;
                }
            }
        }
        function hideShowBibleVerseSelectorsAsNeeded() {
            var isBibleQuestion = bibleQuestionType.checked;
            if (isBibleQuestion) {
                // show all initially
                var startBookSelection = startBook.value;
                var startChapterSelection = startChapter.value;
                var endBookSelection = endBook.value;
                var endChapterSelection = endChapter.value;
                if (startBookSelection === '-1' || startBookSelection === '' || startBookSelection === null) {
                    hideElement(startChapter.parentElement);
                    hideElement(startVerse.parentElement);
                } else if (startChapterSelection === '-1' || startChapterSelection === '' || startChapterSelection === null) {
                    showElement(startChapter.parentElement);
                    hideElement(startVerse.parentElement);
                } else {
                    showElement(startChapter.parentElement);
                    showElement(startVerse.parentElement);
                }
                if (endBookSelection === '-1' || endBookSelection === '' || endBookSelection === null) {
                    hideElement(endChapter.parentElement);
                    hideElement(endVerse.parentElement);
                } else if (endChapterSelection === '-1' || endChapterSelection === '' || endChapterSelection === null) {
                    showElement(endChapter.parentElement);
                    hideElement(endVerse.parentElement);
                } else {
                    showElement(endChapter.parentElement);
                    showElement(endVerse.parentElement);
                }
            }
        }

        // setup initial selection for commentary volume
        if ((questionType == 'commentary-qna' || questionType == 'commentary-qna-fill') && commentaryID != "" && commentaryID != -1) {
            $('#commentary-volume option[value="' + commentaryID + '"]').prop('selected', true);
        }
        updateSelect2('#commentary-volume');

        // events for fill in the blank checkbox (fillInBlankCheckbox)
        var previousNumPointsValue = "1";
        function modifyAnswerField(isFillInChecked) {
            if (isFillInChecked) {
                answerField.disabled = true;
                answerField.required = false;
                $('#question-answer-div').hide();
                previousNumPointsValue = $('#number-of-points').val();
                $('#number-of-points').val('1');
                $('#number-of-points-div').hide();
            }     
            else {
                answerField.disabled = false;
                answerField.required = true;
                $('#number-of-points').val(previousNumPointsValue);
                $('#question-answer-div').show();
                $('#number-of-points-div').show();
            }
        }

        function hideShowFillInInfoText(isFillInChecked) {
            if (isFillInChecked) {
                document.getElementById('fill-in-info').classList.remove('d-none');
            } else {
                document.getElementById('fill-in-info').classList.add('d-none');
            }
        }

        $(fillInBlankCheckbox).change(function() {
            modifyAnswerField(this.checked);
            hideShowFillInInfoText(this.checked);
        });

        modifyAnswerField(isFillInInitially);
        hideShowFillInInfoText(isFillInInitially);
        hideShowBibleVerseSelectorsAsNeeded();
    }); 
</script>

{% endblock %}